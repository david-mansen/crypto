

<script>/**
 * Created by kevin on 7/15/2017.
 */
'use strict';
/* global document */
// Load the fonts
Highcharts.createElement('link', {
    href: 'https://fonts.googleapis.com/css?family=Unica+One',
    rel: 'stylesheet',
    type: 'text/css'
}, null, document.getElementsByTagName('head')[0]);

Highcharts.theme = {
    colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',
        '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],
    chart: {
        backgroundColor: {
            linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },
            stops: [
                [0, '#2a2a2b'],
                [1, '#3e3e40']
            ]
        },
        style: {
            fontFamily: '\'Unica One\', sans-serif'
        },
        plotBorderColor: '#606063'
    },
    title: {
        style: {
            color: '#E0E0E3',
            textTransform: 'uppercase',
            fontSize: '20px'
        }
    },
    subtitle: {
        style: {
            color: '#E0E0E3',
            textTransform: 'uppercase'
        }
    },
    xAxis: {
        gridLineColor: '#707073',
        labels: {
            style: {
                color: '#E0E0E3'
            }
        },
        lineColor: '#707073',
        minorGridLineColor: '#505053',
        tickColor: '#707073',
        title: {
            style: {
                color: '#A0A0A3'

            }
        }
    },
    yAxis: {
        gridLineColor: '#707073',
        labels: {
            style: {
                color: '#E0E0E3'
            }
        },
        lineColor: '#707073',
        minorGridLineColor: '#505053',
        tickColor: '#707073',
        tickWidth: 1,
        title: {
            style: {
                color: '#A0A0A3'
            }
        }
    },
    yAxis: {
        minRange: 0
    },
    tooltip: {
        backgroundColor: 'rgba(0, 0, 0, 0.85)',
        style: {
            color: '#F0F0F0'
        }
    },
    plotOptions: {
        series: {
            dataLabels: {
                color: '#B0B0B3'
            },
            marker: {
                lineColor: '#333'
            }
        },
        boxplot: {
            fillColor: '#505053'
        },
        candlestick: {
            lineColor: 'white'
        },
        errorbar: {
            color: 'white'
        }
    },
    legend: {
        itemStyle: {
            color: '#E0E0E3'
        },
        itemHoverStyle: {
            color: '#FFF'
        },
        itemHiddenStyle: {
            color: '#606063'
        }
    },
    credits: {
        style: {
            color: '#666'
        }
    },
    labels: {
        style: {
            color: '#707073'
        }
    },

    drilldown: {
        activeAxisLabelStyle: {
            color: '#F0F0F3'
        },
        activeDataLabelStyle: {
            color: '#F0F0F3'
        }
    },

    navigation: {
        buttonOptions: {
            symbolStroke: '#DDDDDD',
            theme: {
                fill: '#505053'
            }
        }
    },

    // scroll charts
    rangeSelector: {
        buttonTheme: {
            fill: '#505053',
            stroke: '#000000',
            style: {
                color: '#CCC'
            },
            states: {
                hover: {
                    fill: '#707073',
                    stroke: '#000000',
                    style: {
                        color: 'white'
                    }
                },
                select: {
                    fill: '#000003',
                    stroke: '#000000',
                    style: {
                        color: 'white'
                    }
                }
            }
        },
        inputBoxBorderColor: '#505053',
        inputStyle: {
            backgroundColor: '#333',
            color: 'silver'
        },
        labelStyle: {
            color: 'silver'
        }
    },

    navigator: {
        handles: {
            backgroundColor: '#666',
            borderColor: '#AAA'
        },
        outlineColor: '#CCC',
        maskFill: 'rgba(255,255,255,0.1)',
        series: {
            color: '#7798BF',
            lineColor: '#A6C7ED'
        },
        xAxis: {
            gridLineColor: '#505053'
        }
    },

    scrollbar: {
        barBackgroundColor: '#808083',
        barBorderColor: '#808083',
        buttonArrowColor: '#CCC',
        buttonBackgroundColor: '#606063',
        buttonBorderColor: '#606063',
        rifleColor: '#FFF',
        trackBackgroundColor: '#404043',
        trackBorderColor: '#404043'
    },

    // special colors for some of the
    legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',
    background2: '#505053',
    dataLabelsColor: '#B0B0B3',
    textColor: '#C0C0C0',
    contrastTextColor: '#F0F0F3',
    maskColor: 'rgba(255,255,255,0.3)'
};

// Apply the theme
Highcharts.setOptions(Highcharts.theme);
</script>
<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto" ></div>

<div class="container" style="background-color: black">
    <div class="row">
        <div>

            <script>

                //    var required = require('required');
                //
                //    var averages = require("../db/database.js");
                //    var ranges = require("../db/database.js");
                var bitcoin = [];
                var ethereum = [];
                var numPoints = 50;
                var pastTime = Math.round((new Date()).getTime()) - (5000*numPoints);
                console.log("pastTime",pastTime);
                for(let i=0; i<numPoints; i++){
                    var timeStamp = pastTime + i*5000;
                    console.log("prebuilt",timeStamp);
                    var num1 = Math.floor(Math.random()*0.5) + 0.5; // this will get a number between 1 and 99;
                    num1 *= Math.floor(Math.random()*2) == 1 ? 1 : -1;

                    var num2 = Math.floor(Math.random()*1) + 1; // this will get a number between 1 and 99;
                    num2 *= Math.floor(Math.random()*2.0) == 1 ? 1 : -1;

                    var randBitcoin = 2050.3 + num1;
                    var randEthereum = 176.5 + num2;

                    bitcoin.push([timeStamp, randBitcoin]);
                    ethereum.push([timeStamp, randEthereum]);

                }


                var chart = Highcharts.chart('container', {
                    chart: {
                        zoomType: 'x'
                    },
                    title: {
                        text: 'Cryptocurrencies'
                    },
                    subtitle: {
                        text: document.ontouchstart === undefined ?
                                'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'
                    },
                    xAxis: {
                        type: 'datetime'
                    },
                    yAxis: {
                        title: {
                            text: 'Exchange rate'
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    plotOptions: {
                        area: {
                            fillColor: {
                                linearGradient: {
                                    x1: 0,
                                    y1: 0,
                                    x2: 0,
                                    y2: 1
                                },
                                stops: [
                                    [0, Highcharts.getOptions().colors[0]],
                                    [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                                ]
                            },
                            marker: {
                                radius: 2
                            },
                            lineWidth: 1,
                            states: {
                                hover: {
                                    lineWidth: 1
                                }
                            },
                            threshold: 0
                        }
                    },
                    series: [{
                        type:'area',
                        name: 'Bitcoin',
                        data: bitcoin,
                        zIndex: 1,
                        marker: {
                            fillColor: 'white',
                            lineWidth: 2,
                            lineColor: Highcharts.getOptions().colors[0]
                        }
                    }, {
                        name: 'Ethereum',
                        type:'area',
                        data: ethereum,
                        zIndex: 1,
                        marker: {
                            fillColor: 'white',
                            lineWidth: 2,
                            lineColor: Highcharts.getOptions().colors[0]
                        }
                    }]
                });



                var dataRequestFunction = function (){
                        if(this.executed == null){
                            this.previousRand1 = 10.8;
                            this.previousRand2 = 15.0;
                            this.previousTime = 1248912000000;
                            this.executed = true;
                        }
                        
                        
                        var rand1 =  Math.random() * (0.2) - 0.4;
                        var rand2 =  Math.random() * (0.2)  - 0.4;
                        chart.series[0].addPoint([this.previousTime + 86400000, this.previousRand1+rand1],true,true,true);
                        chart.series[1].addPoint([this.previousTime + 86400000, this.previousRand2+rand2],true,true,true);

                        this.previousRand1 += rand1;
                        this.previousRand2 += rand2;
                        this.previousTime = 86400000 + this.previousTime;
                        console.log(this.previousTime);
                };

                var liveDataRequest = function(){
                    $.get("/livedata", function(data){
                        var parsed = JSON.parse(data);
                        var amountBTC = parseFloat(parsed.coins[0].value);
                        var amountETH = parseFloat(parsed.coins[1].value);
                        console.log(JSON.parse(data));
                        var time = ((new Date()).getTime());
                        chart.series[0].addPoint([time, amountBTC],false,true,true);
                        chart.series[1].addPoint([time, amountETH],false,true,true);
                        chart.redraw();
                    });
                }

                //var timer = setInterval(dataRequestFunction, 2000);
                var timer = setInterval(liveDataRequest, 3000);

                var btcSeries = chart.series[0];
                var ethSeries = chart.series[1];

                $("#BTCButton").click(function(){
                    ethSeries.hide();
                    btcSeries.show();
                    chart.yAxis[0].setExtremes(2000, 2100);
                });

                $("#ETHButton").click(function(){
                    btcSeries.hide();
                    ethSeries.show();
                    chart.yAxis[0].setExtremes(150, 200);

                });

                $("#allButton").click(function(){
                    btcSeries.show();
                    ethSeries.show();
                    chart.yAxis[0].setExtremes(0, 2200);

                });
            </script>

        </div>
    </div>

</div>